/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import classes.MyTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahdi
 */
public class AddEditEmp extends javax.swing.JDialog {

    private Connection con;
    private String func;
    private String oldUserName;
    private String oldRole;

    /**
     * Creates new form AddEditEmp
     */
    public AddEditEmp(java.awt.Frame parent, boolean modal,int id) {
        super(parent, modal);
        initComponents();
        func="edit";
        this.idTextField.setText(""+id);
        if(id==0)
        {
            this.roleComboBox.setEnabled(false);
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            ResultSet set=stat.executeQuery("SELECT * FROM Employee,has,Log_IN "
                    + "Where Employee.Emp_id="+id+" and has.Emp_ID=Employee.Emp_id "
                            + "and has.username=log_in.username");
            if(set.next())
            {
                this.firstTextField.setText(set.getString(2));
                this.lastTextField.setText(set.getString(3));
                this.phoneTextField.setText(set.getString(4));
                this.emailTextField.setText(set.getString(5));
                this.salaryTextField.setText(""+set.getDouble(6));
                this.usernameTextField2.setText(set.getString(9));
                this.roleComboBox.setSelectedItem(set.getString(12));
                oldUserName=set.getString(9);
                oldRole=set.getString(12);
            }
            con.close();
        }
        catch(Exception e)
        {
            
        }
    }
    
    public AddEditEmp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        func="add";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            ResultSet set = stat.executeQuery("SELECT COUNT(*) FROM employee");
            set.next();
            int id=set.getInt(1);
            do{
                set=stat.executeQuery("SELECT COUNT(*) FROM employee WHERE emp_id="+id);
                set.next();
                int count = set.getInt(1);
                if(count!=0)
                {
                    id--;
                }
                else
                {
                    break;
                }
            }
            while(true);
            idTextField.setText(""+id);
            con.close();
        }
        catch(Exception e)
        {
                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameTextField2 = new javax.swing.JTextField();
        RoleLabel = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox<>();
        passwordField = new javax.swing.JPasswordField();
        confirmField = new javax.swing.JPasswordField();
        mainPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        salaryLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        lastTextField = new javax.swing.JTextField();
        firstTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        salaryTextField = new javax.swing.JTextField();
        idTextField = new javax.swing.JTextField();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Login Informations"));

        usernameLabel.setText("Username : ");

        jLabel1.setText("Password : ");

        jLabel2.setText("Confirm Password : ");

        RoleLabel.setText("Role : ");

        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "user", "admin" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(usernameLabel)
                    .addComponent(RoleLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameTextField2)
                    .addComponent(passwordField)
                    .addComponent(confirmField)
                    .addComponent(roleComboBox, 0, 136, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(confirmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoleLabel)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Informations"));

        idLabel.setText("ID : ");

        nameLabel.setText("First Name :");

        lastNameLabel.setText("Last Name :");

        emailLabel.setText("Email :");

        salaryLabel.setText("Salary : ");

        phoneLabel.setText("Phone Number :");

        idTextField.setEnabled(false);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(idLabel)
                    .addComponent(emailLabel)
                    .addComponent(salaryLabel)
                    .addComponent(lastNameLabel)
                    .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(salaryTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(emailTextField)
                    .addComponent(phoneTextField)
                    .addComponent(lastTextField)
                    .addComponent(idTextField)
                    .addComponent(firstTextField))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(idLabel))
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(nameLabel))
                    .addComponent(firstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lastNameLabel))
                    .addComponent(lastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(phoneLabel))
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(emailLabel))
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(salaryLabel))
                    .addComponent(salaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(doneButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            this.con=DriverManager.getConnection(Hotel.getUrl());
            int id = Integer.parseInt(this.idTextField.getText());
            String first = this.firstTextField.getText();
            if(first.equals(""))
            {
                JOptionPane.showMessageDialog(this, "first Name cannot be empty");
                con.close();
                return;
            }
            String last = this.lastTextField.getText();
            if(last.equals(""))
            {
                JOptionPane.showMessageDialog(this, "first Name cannot be empty");
                con.close();
                return;
            }
            String email = this.emailTextField.getText();
            String phone = this.phoneTextField.getText();
            double salary ;
            try {
                salary = Double.parseDouble(this.salaryTextField.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Salary cannot be empty or must be number");
                con.close();
                return;
            }
            String username = this.usernameTextField2.getText();
            if(username.equals(""))
            {
                JOptionPane.showMessageDialog(this, "Username cannot be empty");
                con.close();
                return;
            }
            String pass1=this.passwordField.getText();
            String pass2=this.confirmField.getText();
            String role=(String)this.roleComboBox.getSelectedItem();
            Statement stat=con.createStatement();
            if(func.equals("edit"))
            {
                if(pass1.equals(pass2))
                {
                    if(!username.equals(oldUserName))
                    {
                        try {
                            stat.executeUpdate("UPDATE Log_In SET username='"+username+"' Where username='"+oldUserName+"'");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Username Already exist!");
                            con.close();
                            return;
                        }
                    }
                    stat.executeUpdate("UPDATE Employee SET Emp_Name='"+first+"',Emp_LastName='"+last+"',"
                            + "Emp_PhoneNumber='"+phone+"',emp_email='"+email+"',emp_salary="+salary+" Where Emp_id="+id);
                    if(!oldRole.equals(role))
                    {
                        stat.executeUpdate("UPDATE Log_In SET role='"+role+"' Where username='"+username+"'");
                    }
                    if(!pass1.equals(""))
                    {
                        stat.executeUpdate("UPDATE Log_In SET password='"+pass1+"' Where username='"+username+"'");
                    }
                    DefaultTableModel model = (DefaultTableModel) Hotel.getEmployees().getEmployeesTable().getModel();
                    model.removeRow(Hotel.getEmployees().getEmployeesTable().getSelectedRow());
                    DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    String date=LocalDateTime.now().format(myFormatObj);
                    Object[] row={id,first,last,phone,email,
                        salary,username,date};
                    model.addRow(row);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Passwords not match");
                    con.close();
                    return;
                }
            }
            else
            {
                if(pass1.equals(pass2) && !pass1.equals(""))
                {
                    PreparedStatement preparedStatement;
                    try{
                        preparedStatement = con.prepareStatement("INSERT INTO LOG_IN VALUES(?,?,GETDATE(),?)");
                        preparedStatement.setString(1, username);
                        preparedStatement.setString(2, pass1);
                        preparedStatement.setString(3, role);
                        preparedStatement.execute();
                        preparedStatement = con.prepareStatement("INSERT INTO employee VALUES(?,?,?,?,?,?)");
                        preparedStatement.setInt(1, id);
                        preparedStatement.setString(2, first);
                        preparedStatement.setString(3, last);
                        preparedStatement.setString(4, phone);
                        preparedStatement.setString(5, email);
                        preparedStatement.setDouble(6, salary);
                        preparedStatement.execute();
                        preparedStatement = con.prepareStatement("INSERT INTO HAS VALUES(?,?)");
                        preparedStatement.setInt(1, id);
                        preparedStatement.setString(2, username);
                        preparedStatement.execute();
                        DefaultTableModel model = (DefaultTableModel) Hotel.getEmployees().getEmployeesTable().getModel();
                        DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                        String date=LocalDateTime.now().format(myFormatObj);
                        Object[] row={id,first,last,phone,email,
                        salary,username,date};
                        model.addRow(row);
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(this, "username already exist");
                        con.close();
                        return;
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Passwords not match or empty");
                    con.close();
                    return;
                }
            }
            con.close();
            this.setVisible(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddEditEmp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddEditEmp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JPasswordField confirmField;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField firstTextField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JTextField salaryTextField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField2;
    // End of variables declaration//GEN-END:variables
}
