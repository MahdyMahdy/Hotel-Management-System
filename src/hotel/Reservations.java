/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hotel;

import classes.JTableUtilities;
import classes.MyTableModel;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import java.awt.Color;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;

/**
 *
 * @author mahdi
 */
public class Reservations extends javax.swing.JPanel {

    
    private String[] identifier={"ID","CHECK_IN DATE","CHECK_OUT DATE","CUSTOMER ID","ROOM ID","EMPLOYEE ID"};
    private Connection con;
    private String search;
    private BufferedImage backgroundImage;
    @Override
    public void paintComponent(Graphics grphcs) {
        super.paintComponent(grphcs); 
        grphcs.drawImage(backgroundImage, 0,0,this.getWidth(),this.getHeight(), this);
    }
    public Reservations() {
        try {
            this.backgroundImage=ImageIO.read(new File("src\\images\\home.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            search="reservation.reserv_id";
            MyTableModel reserv=new MyTableModel();
            this.reservationsTable.setModel(reserv);
            reserv.setColumnIdentifiers(identifier);
            ResultSet set=stat.executeQuery("SELECT * FROM reservation,make_reservation "
                    + "WHERE reservation.reserv_id=make_reservation.reserv_id ORDER BY reservation.reserv_id DESC");
            while(set.next())
            {
                Object[] row={set.getInt(1),set.getDate(2),set.getDate(3),set.getInt(4),set.getInt(5),set.getInt(7)};
                reserv.addRow(row);
            }
            JTableUtilities.setCellsAlignment(reservationsTable, SwingConstants.CENTER);
            this.con.close();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"Missing SQLServerDriver!","",JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Connection Error!","",JOptionPane.ERROR_MESSAGE);
        }
        if(Hotel.getRole().equals("admin"))
        {
            this.empButton.setEnabled(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        sort1Group = new javax.swing.ButtonGroup();
        sort2Group = new javax.swing.ButtonGroup();
        seachGroup = new javax.swing.ButtonGroup();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationsTable = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        searchByLabel = new javax.swing.JLabel();
        custIdSearchRadioButton = new javax.swing.JRadioButton();
        empIdSearchRadioButton = new javax.swing.JRadioButton();
        idSearchRadioButton = new javax.swing.JRadioButton();
        roomIdSeachRadioButton = new javax.swing.JRadioButton();
        searchLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        empButton = new javax.swing.JButton();
        custButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        roomButton = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jCheckBox1.setText("jCheckBox1");

        jScrollPane1.setBackground(new Color(255,255,255,100));
        jScrollPane1.setToolTipText("");

        reservationsTable.setAutoCreateRowSorter(true);
        reservationsTable.setFillsViewportHeight(true);
        reservationsTable.setBackground(new Color(255,255,255));
        reservationsTable.getTableHeader().setBackground(new Color(255,255,255));
        reservationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reservationsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(reservationsTable);
        reservationsTable.getTableHeader().setReorderingAllowed(false);

        searchPanel.setBackground(new Color(255,255,255,100));
        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search : "));

        searchByLabel.setText("Search By : ");

        custIdSearchRadioButton.setBackground(new Color(0,0,0,0));
        seachGroup.add(custIdSearchRadioButton);
        custIdSearchRadioButton.setText("Customer ID");
        custIdSearchRadioButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        custIdSearchRadioButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
        });
        custIdSearchRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        custIdSearchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIdSearchRadioButtonActionPerformed(evt);
            }
        });

        empIdSearchRadioButton.setBackground(new Color(0,0,0,0));
        seachGroup.add(empIdSearchRadioButton);
        empIdSearchRadioButton.setText("Employee ID");
        empIdSearchRadioButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
        });
        empIdSearchRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        empIdSearchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empIdSearchRadioButtonActionPerformed(evt);
            }
        });

        idSearchRadioButton.setBackground(new Color(0,0,0,0));
        seachGroup.add(idSearchRadioButton);
        idSearchRadioButton.setSelected(true);
        idSearchRadioButton.setText("Reservation ID");
        idSearchRadioButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        idSearchRadioButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
        });
        idSearchRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        idSearchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idSearchRadioButtonActionPerformed(evt);
            }
        });

        roomIdSeachRadioButton.setBackground(new Color(0,0,0,0));
        seachGroup.add(roomIdSeachRadioButton);
        roomIdSeachRadioButton.setText("Room ID");
        roomIdSeachRadioButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ref(evt);
            }
        });
        roomIdSeachRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rep(evt);
            }
        });
        roomIdSeachRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdSeachRadioButtonActionPerformed(evt);
            }
        });

        searchLabel.setText("Search : ");

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchLabel)
                    .addComponent(searchByLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(idSearchRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(custIdSearchRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(roomIdSeachRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(empIdSearchRadioButton)
                        .addGap(0, 87, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(searchTextField)
                        .addContainerGap())))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByLabel)
                    .addComponent(idSearchRadioButton)
                    .addComponent(custIdSearchRadioButton)
                    .addComponent(empIdSearchRadioButton)
                    .addComponent(roomIdSeachRadioButton))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        empButton.setBackground(new java.awt.Color(255, 255, 255));
        empButton.setText("To Employee");
        empButton.setEnabled(false);
        empButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empButtonActionPerformed(evt);
            }
        });

        custButton.setBackground(new java.awt.Color(255, 255, 255));
        custButton.setText("To Customer");
        custButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custButtonActionPerformed(evt);
            }
        });

        checkOutButton.setBackground(new java.awt.Color(255, 255, 255));
        checkOutButton.setText("To Check_Out");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });

        roomButton.setBackground(new java.awt.Color(255, 255, 255));
        roomButton.setText("To Room");
        roomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(checkOutButton)
                        .addGap(18, 18, 18)
                        .addComponent(roomButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(custButton)
                        .addGap(18, 18, 18)
                        .addComponent(empButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empButton)
                    .addComponent(custButton)
                    .addComponent(checkOutButton)
                    .addComponent(roomButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void empIdSearchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empIdSearchRadioButtonActionPerformed
        this.search="make_reservation.emp_id";
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_empIdSearchRadioButtonActionPerformed

    private void idSearchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idSearchRadioButtonActionPerformed
        this.search="reservation.reserv_id";
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_idSearchRadioButtonActionPerformed

    private void custIdSearchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIdSearchRadioButtonActionPerformed
        this.search="make_reservation.cust_id";
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_custIdSearchRadioButtonActionPerformed

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
        try {
            this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            MyTableModel reserv=new MyTableModel();
            this.reservationsTable.setModel(reserv);
            reserv.setColumnIdentifiers(identifier);
            String word;
            if(!Character.isISOControl(evt.getKeyChar()))
            {
                word=this.searchTextField.getText()+evt.getKeyChar();
            }
            else
            {
                word=this.searchTextField.getText();
            }
            ResultSet set=stat.executeQuery("SELECT * FROM reservation,make_reservation "
                    + "WHERE "+this.search+" LIKE '%"+word+"%' "
                            + "AND reservation.reserv_id=make_reservation.reserv_id ORDER BY reservation.reserv_id DESC");
            while(set.next())
            {
                Object[] row={set.getInt(1),set.getDate(2),set.getDate(3),set.getInt(4),set.getInt(5),set.getInt(7)};
                reserv.addRow(row);
            }
            JTableUtilities.setCellsAlignment(this.reservationsTable, SwingConstants.CENTER);
            this.con.close();
        } catch (SQLException ex) {
            Logger.getLogger(CheckIn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchTextFieldKeyTyped

    public JTable getReservationsTable() {
        return reservationsTable;
    }

    private void roomIdSeachRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdSeachRadioButtonActionPerformed
        this.search="make_reservation.room_id";
        this.revalidate();
        this.repaint();
        
    }//GEN-LAST:event_roomIdSeachRadioButtonActionPerformed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        int row=this.getReservationsTable().getSelectedRow();
        if(row>=0)
        {
            Object out=this.getReservationsTable().getValueAt(row, 2);
            if(out==null)
            {
                int id=(int) this.getReservationsTable().getValueAt(row, 0);
                Hotel.getCheckOut().getReservationIdTextField().setText(""+id);
                Hotel.getCheckOut().getCheckIdButton().setEnabled(true);
                Hotel.getCheckOut().getCheckIdButton().doClick();
                Hotel.getHome().getTabbebPane().setSelectedIndex(1);
            }
        }
    }//GEN-LAST:event_checkOutButtonActionPerformed

    private void custButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custButtonActionPerformed
        int row=this.getReservationsTable().getSelectedRow();
        if(row>=0)
        {
            int id=(int) this.getReservationsTable().getValueAt(row, 3);
            Hotel.getCustomer().getSeachGroup()
                    .setSelected(Hotel.getCustomer().getIdSearchRadioButton().getModel(), true);
            Hotel.getCustomer().getSearchTextField().setText(""+id);
            try {
                this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            MyTableModel cust=new MyTableModel();
            Hotel.getCustomer().getCustomerTable().setModel(cust);
            String[] identifier={"ID","NAME","LAST NAME","PHONE NUMBER","EMAIL"};
            cust.setColumnIdentifiers(identifier);
            ResultSet set=stat.executeQuery("SELECT * FROM customer "
                    + "WHERE cust_id="+id);
            while(set.next())
            {
                Object[] roww={set.getInt(1),set.getString(2),set.getString(3),set.getString(4),set.getString(5)};
                cust.addRow(roww);
            }
            this.con.close();
            JTableUtilities.setCellsAlignment(Hotel.getCustomer().getCustomerTable(), SwingConstants.CENTER);
        } catch (SQLException ex) {
            Logger.getLogger(CheckIn.class.getName()).log(Level.SEVERE, null, ex);
        }
            Hotel.getHome().getTabbebPane().setSelectedIndex(4);
        }
    }//GEN-LAST:event_custButtonActionPerformed

    private void roomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomButtonActionPerformed
        int row=this.getReservationsTable().getSelectedRow();
        if(row>=0)
        {
            try {
                this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            int id=(int) this.getReservationsTable().getValueAt(row, 4);
            ResultSet set=stat.executeQuery("SELECT * FROM room,own "
                    + "WHERE room.room_id=own.room_id and room.room_id="+id);
            if(set.next())
            {
                DefaultMutableTreeNode root= (DefaultMutableTreeNode) Hotel.getRooms().getRoomsTree().getModel().getRoot();
                for(int i=root.getChildCount()-1;i>=0;i--)
                {
                    for(int j=root.getChildAt(i).getChildCount()-1;j>=0;j--)
                    {
                        Hotel.getRooms().getRoomsTree().collapseRow(i+j+1);
                    }
                }
                for(int i=0;i<root.getChildCount();i++)
                {
                    if(root.getChildAt(i).toString().equals("Branch "+set.getInt("Branch_id")))
                    {
                        Hotel.getRooms().getRoomsTree().expandRow(i+1);
                        for(int j=0;j<root.getChildAt(i).getChildCount();j++)
                        {
                            if(root.getChildAt(i).getChildAt(j).toString().equals("Floor "+set.getInt("Floor_nb")))
                            {
                                Hotel.getRooms().getRoomsTree().expandRow(i+1+j+1);
                                for(int k=0;k<root.getChildAt(i).getChildAt(j).getChildCount();k++)
                                {
                                    if(root.getChildAt(i).getChildAt(j).getChildAt(k).toString().startsWith("Room "+set.getInt("Room_Id")))
                                    {
                                        Hotel.getRooms().getRoomsTree().setSelectionRow(i+1+j+1+k+1);
                                        break;
                                    }
                                }
                                break;
                            }
                        }
                        break;
                    }
                }
                con.close();
                Hotel.getHome().getTabbebPane().setSelectedIndex(2);
            }
        }   catch (SQLException ex) {
                Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_roomButtonActionPerformed

    private void empButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empButtonActionPerformed
        int row=this.getReservationsTable().getSelectedRow();
        if(row>=0)
        {
            int id=(int) this.getReservationsTable().getValueAt(row, 5);
            Hotel.getEmployees().getSeachGroup()
                    .setSelected(Hotel.getEmployees().getIdSearchRadioButton().getModel(), true);
            Hotel.getCustomer().getSearchTextField().setText(""+id);
            try {
                this.con=DriverManager.getConnection(Hotel.getUrl());
            Statement stat=con.createStatement();
            MyTableModel emp=new MyTableModel();
            Hotel.getEmployees().getEmployeesTable().setModel(emp);
            String[] identifier={"ID","NAME","LAST NAME","PHONE NUMBER","EMAIL","SALARY","USERNAME","LASTSEEN"};
            emp.setColumnIdentifiers(identifier);
            ResultSet set=stat.executeQuery("SELECT * FROM Employee,has,Log_In "
                    + "WHERE employee.emp_id=has.emp_id and has.username=log_In.username and employee.emp_id="+id);
            while(set.next())
            {
                Object[] roww={set.getInt(1),set.getString(2),set.getString(3),set.getString(4),set.getString(5),
                set.getDouble(6),set.getString(8),set.getDate(11)};
                emp.addRow(roww);
            }
            con.close();
            JTableUtilities.setCellsAlignment(Hotel.getEmployees().getEmployeesTable(), SwingConstants.CENTER);
            } catch (SQLException ex) {
                Logger.getLogger(CheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
                Hotel.getHome().getTabbebPane().setSelectedIndex(5);
            }
    }//GEN-LAST:event_empButtonActionPerformed

    private void rep(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rep
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_rep

    private void ref(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ref
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_ref


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JButton custButton;
    private javax.swing.JRadioButton custIdSearchRadioButton;
    private javax.swing.JButton empButton;
    private javax.swing.JRadioButton empIdSearchRadioButton;
    private javax.swing.JRadioButton idSearchRadioButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reservationsTable;
    private javax.swing.JButton roomButton;
    private javax.swing.JRadioButton roomIdSeachRadioButton;
    private javax.swing.ButtonGroup seachGroup;
    private javax.swing.JLabel searchByLabel;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.ButtonGroup sort1Group;
    private javax.swing.ButtonGroup sort2Group;
    // End of variables declaration//GEN-END:variables

}
